 Hello everyone, thanks for joining. Let's get started. We've got a lot to cover today. So first up, the Stripe integration. That's still a work in progress. We've hit a minor issue on the recurrent payment cycle. On the third retry, the validation fails only on test merchant accounts. But we need to sort that before the next release. John, please look into that validation glitch on the third retry and prepare a documentation on the entire retry sequence behavior. Make sure the flow is mapped out clearly so that the QAT isn't confused. Moving on, Emily, that batch of failed transactions from Thursday. Were you able to isolate the root cause? Okay, so Malphon payloads a slipping pasta validator. That's not good. Emily, prepare a comparison report between our validation schema and RazerPay's expected structure and send it to Manish before UOD. Now Zoya, I saw some merchant complaints about transactions being deducted but not reflecting on the dashboard. Were those tied to the same issue? Alright, Zoya, respond to those merchants with a clear update and let them know it's due to reconciliation delays from the bank API. Keep it polite but firm. Priya, since this keeps happening, set up a report on the average reconciliation delay times and suggest a way we can show this to merchants more transparently. Actually, John, create a dashboard widget that visualizes reconciliation delay trends over the past 24 hours. Add filters so the support team can view it by merchant or payment method. Before we move on, quick note, the HR team got new chairs again. The expensive ergonomic ones. If anyone knows where we file complaints about back pain and chair envy, do share. Alright, back on track. Regarding the merchant dashboard redesign, Priya, as discussed last week, sent the latest Figma walkthrough to the design and QA teams today itself. They need that before they can proceed with component linking. Also, two merchants are still stuck on V1 of the API and refusing to migrate to V2. It's creating weird legacy errors in the logs. Ankit, contact those merchants directly and guide them through the V2 API migration. Let them know we are deprecating V1 within three weeks and it's critical this switch. Now on to the beta rollout of the dashboard. Emily, shortlist the top 10 merchants based on transaction volume and prepare them for the beta testing round starting next week. Once that's done, Ankit set up the credentials for those 10 merchants and write a short onboarding guide to help them understand the dashboard features. So Emily, coordinate with QA to ensure we get real time feedback during the beta. We want to catch UI UX issues early before the public release. Alright, moving on. About the UPI flow, we've seen a small spike in drop transactions around 6pm to 7pm daily. It's consistent with peak traffic hours, but the success rate is dipping below 95% during that window. That's outside our SLA. John, analyze the UPI failure patterns specifically for that 6 to 7pm slot and share a time series breakdown before tomorrow's sync. Also Priya, create a slide for the Monday readership review summarizing payment success trends and clearly highlight the dip in UPI success during peak time. Ankit, double check if we've updated the UPI fallback mechanism recently. If not, draft a proposal to retry failed UPI transactions via net banking where possible. Okay, let's shift gears for a second. Anyone here still using that old Jira board? Mine's not syncing with GitHub tasks properly and it's starting to drive me insane. Yeah, same here. I think IT needs to clean up those old project links. Zoya, ping IT support and ask them to archive old Jira boards linked to deprecated GitHub reports. We only need the active pipelines running. Thanks. Now let's quickly touch upon the merchant onboarding process. We're still seeing delays in KYC verification specially for tier 2 cities. Emily, reach out to the compliance team and ask them to speed up document verification turnaround for tier 2 onboardings. Include a weekly average chart if you can. So Zoya, coordinate with the documentation team to update the KYC instructions in the onboarding emails. Merchants are missing key steps and uploading the wrong files. Before I forget, Ankit finalized the FAQ page for new merchants using the redesigned dashboard. It should be short and focused. Keep it under 10 questions. And one more thing, Priya talked to the design team and asked them to change the color scheme on the payout delay alert box. Right now it blends into the background and no one notices it. Quick pause, anyone else hear that weird buzzing during calls lately? Could be just me but it's like a bee stuck in the microphone. Maybe it's karma for mocking the HR chairs. Okay, back to work. We've received multiple complaints about payout failures due to incorrect IFSC codes even though the merchants had correct values on the dashboard. John investigate whether the IFSC validation service is caching outdated data if that's the case, raise a buck and patch it. Emily, once John shares the outcome, prepare an internal FAQ knot for the support team to help them explain the situation to merchants who face that issue. Also, we need to address the retry logic for the subscription renewal system. Currently, it retries only once if a card fails but merchants have requested at least 3 retries before marking it failed. John, please update the retry logic to attempt 3 space retries over 72 hours and make sure this doesn't conflict with any webhook triggers already in place. Emily tests this update in sandbox mode with at least 2 card types and confirms that retries follow the correct delay intervals. Alright, let's move on to the refund automation module. We've had some delays on that front. Initially, the idea was to auto-approve refunds under Rs. 200 if the merchant has a high trust score but the current implementation still sends them all for manual review. John update the refund rule engine to allow automatic processing for refunds below Rs. 200 for merchants with a trust score above 80. Make sure the logic includes both amount and score as filters. Emily validates the changes in staging after John pushes the update and reports any discrepancies immediately to QA. Ankit, since you're already handling dashboard-related work, create a small tooltip pop-up next to the refund status on the merchant view. It should explain why a refund was auto-approved or flagged. Also Zoya, coordinate with a CX team to prepare a short email template that informs merchants when their refunds get auto-approved under the new rule. Priya, build a checklist slide showing which refund rules are live pending or being tested. We'll use that in Friday's print review. Before we continue, just pausing for a second, did anyone else have login issues on Slack this morning? It asked for 2FA like 3 times and then froze. Felt like it was guarding nuclear secrets. Okay, back to work. About the new payout scheduling feature. This has been a merchant request for ages. Right now all payouts are instant by default but some merchants want them at fixed times of the day for easier reconciliation. Ankit, design a basic scheduling interface via frame that lets merchants choose payout timings like 10am, 2pm or end of the day. Keep it simple, drop down and save. John build a backend logic to batch and reluze payouts based on selected times and add arrow logging in case the batch fails or gets skipped. Emily tells his feature against two test merchants and log all edge cases related to skip timings or double payouts. Zoya, prepare an internal FAQ for the support team to handle merchant queries about this new feature once we go live. And Priya, inform the legal team about the changes in payout scheduling so that they can review any compliance implications. Before I forget, there's also the matter of cross-border payments for USD that still block due to our pending approval with the RBI channel partner. Zoya, follow up with our banking partner on the approval status and get a written ETN that we can share internally. Quick note here, if anyone gets a call from a reporter named Tania from FIN News, please redirect her to corporate comms. She's been circling around asking about our UPI data sharing policies. Now coming back to the support ticket backlog. We are seeing an uptake in the average resolution time. Most of it is tied to repeated questions about webhook failures and missing documentation links. Zoya, create a new auto response template for webhook related issues that links to the updated troubleshooting guide. Anankit, add a new section in the developer portal under integration FAQs that addresses common webhook setup errors and timeout handling best practices. Priya, schedule a knowledge-earning session next week so the support and engineering teams can walk through these common failure patterns and reduce the back and foretend tickets. Emily, include the top 5 support themes in your weekly metrics report starting Friday. Let's keep a track of friends going forward. Also, just putting this out there, has anyone checked the state of the fridge in the break room recently? It smells like someone left fish curry in there 3 weeks ago and then forgot about it. We might need to start a fridge cleaning schedule or just declare a fridge-free week. And while we are on the topic of cleanliness, can we all agree that whoever has been leaving sticky notes with movie recommendations on the coffee machine needs to reveal themselves? Testela for motivation isn't the caffeine push we think it is. But it's appreciated. Alright, let's try to wrap this up in the next 10 minutes. We've covered most of the product side updates, but just a quick reminder that the release free starts this Friday. No new features should be merged to main after Thursday evening. John, audit the recent merge requests and flag anything that might be risky or require rollback consideration before Friday. Emily, send a final QS-Samajee report of false staging builds to the group by Thursday morning. Keep it short. First mentioned passed and failed builds. Priya, notify the design team to freeze UI component updates after Thursday noon. We can't afford to push broken designs into release branch at the last minute again. Also Ankit, draft a release readiness checklist by tomorrow including backend tasks, UI sign-offs and any pending API updates. On the DevOps side, we are still getting alerts on the payout queue's memory usage every night. It's not a critical failure yet, but it's noisy. Zoya, raise a ticket with the DevOps team asking them to optimize memory thresholds for the payout queue service and disable redundant alerts. One last thing, Emily, review the feedback from last month's merchant survey and extract the top 5 reoccurring pain points. We'll use that in the Q3 planning doc. By the way, anyone figured out who keeps renaming the Slack channels with emojis? I saw hashtag payout warriors this morning and honestly thought we were launching an eSports division. Okay, jokes aside. One last thing, John, add a short alert banner on the merchant dashboard homepage informing users about planning.
 John, add a short alert banner on the Merchant Asphalt homepage informing users about planned downtime on Saturday night. Keep it visible, but not intrusive. Priya prepare an internal memo summarizing today's meeting, especially for the folks who couldn't join. Keep the focus on decisions taken and upcoming responsibilities. That's it from my side. Thanks everyone for the updates and please follow up on your respective items before the next sync. If there are blockers, flag them all. Otherwise, enjoy the rest of the week and avoid HR's coffee machine unless you want to experience bitterness on a whole new level.